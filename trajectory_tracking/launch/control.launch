<launch>
  <include file="$(find gazebo_ros)/launch/empty_world.launch" >
  <arg name="world_name" value="$(find two_robot)/worlds/empty.world"/>
  </include>
    
  
  <node
    name="tf_footprint_base"
    pkg="tf"
    type="static_transform_publisher"
    args="0 0 0 0 0 0 base_link base_footprint 40" />
  <param name="robot_description" textfile="$(find two_robot)/urdf/two_robot.urdf" />
  <node
    name="spawn_model"
    pkg="gazebo_ros"
    type="spawn_model"
    args="-file $(find two_robot)/urdf/two_robot.urdf -urdf -model two_robot"
    output="screen" />
  <node
    name="fake_joint_calibration"
    pkg="rostopic"
    type="rostopic"
    args="pub /calibrated std_msgs/Bool true" />
  <!-- Load joint controller configurations from YAML file to parameter server -->
  <rosparam file="$(find MYROBOT_control)/config/my_control.yaml" command="load"/>
=======
  <!-- Load joint controller configurations from YAML file to parameter server -->
  <rosparam file="$(find MYROBOT_contol)/config/my_control.yaml" command="load"/>
>>>>>>> 6ca41d4ff84544147f430048270163452df0609e
  
  <!-- load the controllers -->
  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
    output="screen" ns="/two_robot" args="joint1_velocity_controller  joint2_velocity_controller joint3_velocity_controller joint4_velocity_controller joint5_velocity_controller joint6_velocity_controller joint_state_controller"/>
  
  <!-- convert joint states to TF transforms for rviz, etc -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
    respawn="false" output="screen">
    <remap from="/joint_states" to="/two_robot/joint_states" />
  </node>
</launch>
